<?php

/**
 * Implementation of hook_flag_default_flags().
 */
function cmi_rocketship_flag_default_flags() {
  $flags = array();

  // Exported flag: "Highest Priority".
  $flags['highest_priority'] = array (
    'content_type' => 'node',
    'title' => 'Highest Priority',
    'global' => '1',
    'types' => 
    array (
      0 => 'issue',
    ),
    'flag_short' => 'On fire!',
    'flag_long' => 'Set this issue as on fire!',
    'flag_message' => '',
    'unflag_short' => 'Throw water',
    'unflag_long' => '',
    'unflag_message' => '',
    'unflag_denied_text' => '',
    'link_type' => 'toggle',
    'roles' => 
    array (
      'flag' => 
      array (
        0 => '2',
      ),
      'unflag' => 
      array (
        0 => '2',
      ),
    ),
    'show_on_page' => 1,
    'show_on_teaser' => 0,
    'show_on_form' => 0,
    'access_author' => '',
    'i18n' => 0,
    'api_version' => 2,
  );
  
  // Exported flag: "Bookmarks".
  $flags['bookmarks'] = array(
    'content_type' => 'node',
    'title' => 'Bookmarks',
    'global' => '0',
    'types' => array(
      0 => 'issue',
    ),
    'flag_short' => 'Bookmark this',
    'flag_long' => 'Add this post to your bookmarks',
    'flag_message' => 'This post has been added to your bookmarks',
    'unflag_short' => 'Unbookmark this',
    'unflag_long' => 'Remove this post from your bookmarks',
    'unflag_message' => 'This post has been removed from your bookmarks',
    'unflag_denied_text' => '',
    'link_type' => 'toggle',
    'roles' => array(
      'flag' => array(
        0 => '2',
      ),
      'unflag' => array(
        0 => '2',
      ),
    ),
    'weight' => 0,
    'show_on_form' => 1,
    'access_author' => '',
    'show_on_page' => 1,
    'show_on_teaser' => 1,
    'show_contextual_link' => 0,
    'i18n' => 0,
    'api_version' => 2,
  );
  
  // Exported flag: "Marks issues to be worked on in the current sprint".
  $flags['current_sprint'] = array(
    'content_type' => 'node',
    'title' => 'Marks issues to be worked on in the current sprint',
    'global' => '1',
    'types' => array(
      0 => 'issue',
    ),
    'flag_short' => 'Mark for current sprint',
    'flag_long' => '',
    'flag_message' => '',
    'unflag_short' => 'Unmark for current sprint',
    'unflag_long' => '',
    'unflag_message' => '',
    'unflag_denied_text' => '',
    'link_type' => 'toggle',
    'roles' => array(
      'flag' => array(
        0 => '2',
      ),
      'unflag' => array(
        0 => '2',
      ),
    ),
    'weight' => 0,
    'show_on_form' => 0,
    'access_author' => '',
    'show_on_page' => 1,
    'show_on_teaser' => 1,
    'show_contextual_link' => 0,
    'i18n' => 0,
    'api_version' => 2,
  );
  
  return $flags;
}

/**
 * Implements hook_views_api().
 */
function cmi_rocketship_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'cmi_rocketship') . '/includes/views',
  );
}

/**
 * Implements hook_views_default_views().
 */
function cmi_rocketship_views_default_views() {
  // Search the "views" directory for files ending in .view.inc.
  $files = file_scan_directory(drupal_get_path('module', 'cmi_rocketship') . '/includes/views', '/view.inc$/');
  watchdog('rocketship', print_r($files, TRUE));
  foreach ($files as $absolute => $file) {
    // This is not require_once because it's possible that
    // hook_views_default_views() gets called more than once.
    require $absolute;
    if (isset($view)) {
      // $file->name has the ".inc" stripped off, but still has the ".view".
      $view_name = substr($file->name, 0, strrpos($file->name, '.'));
      $views[$view_name] = $view;
    }
  }
  return $views;
}

/**
 * Implements hook_block_info().
 */
function cmi_rocketship_block_info() {
  $blocks['tag_cloud'] = array(
    'info' => t('Contributors'),
  );

  $blocks['tag_cloud'] = array(
    'info' => t('Contributors'),
  );
  
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function cmi_rocketship_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'tag_cloud':
      $block['subject'] = t('Thanks to');
      $block['content'] = _cmi_rocketship_get_tag_cloud();
      break;
  }
  return $block;
}

function _cmi_rocketship_get_tag_cloud() {
  // Styling and some usabiltiy improvement JS included inline. This is indeed
  // very ugly but is quickly accessible for development and can be refactored
  // later.
  $output = <<<STYLE
<style>
  .rocketship-issues table {
    width: 100%;
  }
  .rocketship-issues table tr.odd {
    background-color: #FFFFFF;
  }
  .rocketship-issues table tr td {
    vertical-align: top;
    width: 33%;
  }
  .rocketship-node {
    margin-bottom: 1em;
    border-radius: 5px;
    padding: 3px 5px 3px 8px;
    -moz-box-shadow:0px 0px 6px rgba(0,0,0,0.4);
    -webkit-box-shadow:0px 0px 6px rgba(0,0,0,0.4);
    border-left-width: 8px;
    border-left-color: transparent;
    border-left-style: solid;
    border-left-color: #F5F5F5;
  }
  .rocketship-node a {
    font-weight: bold;
  }
  .rocketship-focus {
    border-left-color: #336699;
  }
  .rocketship-major {
    border-left-color: #FF9900;
  }
  .rocketship-critical {
    border-left-color: #FF0000;
  }
  .rocketship-term {
    background-color: #F5F5F5;
    margin: 2px 6px 2px 0;
    display: inline-block;
    border-radius: 3px;
    font-size: 0.8em;
    padding: 1px 3px;
  }
  .rocketship-needs-tests {
    font-weight: bold;
  }
  .rocketship-legend {
    float: right;
    font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
    font-size: 0.8em;
    margin-top: 0.2em;
  }
  .rocketship-legend div {
    display: inline-block;
    margin-left: 2px;
  }
  .rocketship-node .assigned {
    background-color: #F5F5F5;
    margin: 3px -5px 3px -8px;
    padding: 1px 8px;
    border-top: 1px dotted #DDDDDD;
  }
  .rocketship-cloud-wrapper {
    border-bottom: 1px solid #2d2d2d;
    border-top: 1px solid #2d2d2d;
    margin-bottom: 2em;
  }
  .rocketship-cloud-wrapper p {
    font-size: 0.8em;
    margin-top: 1.3em;
    font-style: italic;
  }
  .rocketship-cloud {
    line-height: 1.3em;
    text-align: justify;
  }
  .rocketship-cloud-1 {
    font-size: 0.8em;
  }
  .rocketship-cloud-2 {
    font-size: 1em;
  }
  .rocketship-cloud-3 {
    font-size: 1.4em;
  }
  .rocketship-cloud-4 {
    font-size: 1.6em;
  }
  .rocketship-cloud-5 {
    font-size: 1.8em;
  }
  .rocketship-cloud-6 {
    font-size: 2em;
  }
  .rocketship-cloud-recent a {
    font-weight: bold;
  }
</style>
STYLE;

  $participant_stats = variable_get('rocketship_participant_stats', array());
  $participant_uids = variable_get('rocketship_participant_uids', array());
  $participant_recent = variable_get('rocketship_participant_recent', array());

  // Remove lead user and some users to avoid skewing the stats.
  unset($participant_stats[ROCKETSHIP_LEAD_USER]);
  unset($participant_stats['System Message']);
  unset($participant_stats['Abandoned Projects']);

  $usercloud = array();
  $max = max(array_values($participant_stats));
  $steps = array(1, 2, 3, 5, 7, 10);
  foreach ($steps as $i => $step) {
    foreach ($participant_stats as $name => $count) {
      if (($step == 10) || ($count <= $step * ($max/10))) {
        $class = 'rocketship-cloud-' . ($i+1);
        if (in_array($participant_uids[$name], $participant_recent)) {
          $class .= ' rocketship-cloud-recent';
        }
        $usercloud[$name] = '<span class="' . $class . '"><a href="http://drupal.org/user/' . $participant_uids[$name] . '">' . check_plain($name) . '</a></span>';
        unset($participant_stats[$name]);
      }
    }
  }
  // Sort by username in a case insensitive fashion.
  uksort($usercloud, "strnatcasecmp");
  $note = '<p>' . t('Based on participation in @tag issues (font size) using a quasi-logarithmic scale and on recent activity (boldness). Excludes the initiative lead, @lead.', array('@tag' => ROCKETSHIP_MASTER_TAG, '@lead' => ROCKETSHIP_LEAD_USER)) . '</p>';
  $output .= '</h3>' . '<div class="rocketship-cloud">' . join(' ', $usercloud) . '</div>' . $note . '</div>';
  return $output;  
}